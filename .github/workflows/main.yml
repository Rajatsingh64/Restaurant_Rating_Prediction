name: Deploy Airflow to AWS ECR

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  build-and-push-ecr-image:
    name: Continuous Delivery
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Utilities
        run: |
          sudo apt-get update
          sudo apt-get install -y jq unzip

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_NAME }}
          IMAGE_TAG: latest
        run: |
          docker build \
            --build-arg AIRFLOW_EMAIL=${{ secrets.AIRFLOW_EMAIL }} \
            --build-arg AIRFLOW_USERNAME=${{ secrets.AIRFLOW_USERNAME }} \
            --build-arg AIRFLOW_PASSWORD=${{ secrets.AIRFLOW_PASSWORD }} \
            -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "IMAGE=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_ENV

  continuous-deployment:
    name: Continuous Deployment
    needs: build-and-push-ecr-image
    runs-on: self-hosted
    steps:
      - name: Clean workspace
        run: sudo rm -rf $GITHUB_WORKSPACE/*

      - name: Fix file permissions
        run: sudo chmod -R 777 $GITHUB_WORKSPACE

      - name: Checkout Code
        uses: actions/checkout@v4
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
  
      - name: Install Utilities
        run: |
          sudo apt-get update
          sudo apt-get install -y jq unzip
  
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
    
      - name: Pull Docker image from ECR
        run: docker pull ${{ secrets.AWS_ECR_LOGIN_URI }}/${{ secrets.ECR_REPOSITORY_NAME }}:latest

      - name: Set Airflow Secrets and Run Docker Image
        run: |
          set -e
          export IMAGE_NAME="${{ secrets.AWS_ECR_LOGIN_URI }}/${{ secrets.ECR_REPOSITORY_NAME }}:latest"
          export AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}"
          export AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          export AWS_DEFAULT_REGION="${{ secrets.AWS_REGION }}"
          export BUCKET_NAME="${{ secrets.BUCKET_NAME }}"
          export MONGO_DB_URL="${{ secrets.MONGO_DB_URL }}"
          export AIRFLOW_EMAIL="${{ secrets.AIRFLOW_EMAIL }}"
          export AIRFLOW_USERNAME="${{ secrets.AIRFLOW_USERNAME }}"
          export AIRFLOW_PASSWORD="${{ secrets.AIRFLOW_PASSWORD }}"
          docker compose up -d

      - name: Docker System Prune to Remove Old Images
        run: docker system prune -f
